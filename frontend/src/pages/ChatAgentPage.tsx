// Simplified local AI agent page for SRO documents
// This version works without external services or authentication

import Layout from '../components/Layout';

const ChatAgentPage = () => {
  const handleExampleQuestion = (question: string) => {
    alert(`–ü—Ä–∏–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞: "${question}"\n\n–î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–∞–ª—å–Ω–æ–π RAG —Å–∏—Å—Ç–µ–º–æ–π —Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å backend —Å Haystack.`);
  };

  return (
    <Layout>
      <div className="container mx-auto px-4 py-8">
        <div className="max-w-4xl mx-auto">
          <div className="text-center mb-8">
            <div className="mx-auto bg-green-100 p-4 rounded-full w-16 h-16 flex items-center justify-center mb-4">
              <svg className="icon-xl text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-4l-4 4-4-4z"/>
              </svg>
            </div>
            <h1 className="text-3xl font-bold text-gray-800 mb-4">–ò–ò-–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –°–†–û</h1>
            <p className="text-gray-600 mb-8">
              –õ–æ–∫–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –Ω–∞ –±–∞–∑–µ Haystack –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º –°–†–û
            </p>
          </div>

        <div className="bg-gradient-to-r from-green-50 to-blue-50 rounded-xl p-8 mb-8">
          <h2 className="text-xl font-semibold text-gray-800 mb-4">üåü –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h2>
          <ul className="text-gray-700 space-y-2 mb-6">
            <li>‚ú® –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ</li>
            <li>üìö –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∏–∑ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤</li>
            <li>ü§ñ RAG —Å–∏—Å—Ç–µ–º–∞ –Ω–∞ –±–∞–∑–µ Haystack</li>
          </ul>


        </div>

        <div className="grid grid-cols-3 gap-4">
          <button
            onClick={() => handleExampleQuestion('–ö–∞–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —á–ª–µ–Ω—Å—Ç–≤—É –≤ –°–†–û?')}
            className="bg-blue-500 hover:bg-blue-600 text-white p-3 rounded-lg flex flex-col items-center text-center transition-colors"
          >
            <h3 className="font-semibold text-xs mb-1">–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —á–ª–µ–Ω—Å—Ç–≤—É</h3>
            <p className="text-xs opacity-90">–ß—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –°–†–û?</p>
          </button>

          <button
            onClick={() => handleExampleQuestion('–ß—Ç–æ —Ç–∞–∫–æ–µ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–æ–Ω–¥?')}
            className="bg-green-500 hover:bg-green-600 text-white p-3 rounded-lg flex flex-col items-center text-center transition-colors"
          >
            <h3 className="font-semibold text-xs mb-1">–ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–æ–Ω–¥</h3>
            <p className="text-xs opacity-90">–ß—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ –∏ –∑–∞—á–µ–º –Ω—É–∂–µ–Ω?</p>
          </button>

          <button
            onClick={() => handleExampleQuestion('–ö–∞–∫–∏–µ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é?')}
            className="bg-purple-500 hover:bg-purple-600 text-white p-3 rounded-lg flex flex-col items-center text-center transition-colors"
          >
            <h3 className="text-xs mb-1">–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è</h3>
            <p className="text-xs opacity-90">–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º</p>
          </button>
        </div>




        </div>
      </div>
    </Layout>
  );
};

export default ChatAgentPage;
